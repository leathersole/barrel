<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" hreflang="en" /><updated>2023-07-20T17:37:10+09:00</updated><id>/feed.xml</id><title type="html">Rolling In The Barrel</title><subtitle>Notes about software and hardware</subtitle><entry xml:lang="en"><title type="html">OpenTracing on 3scale</title><link href="/en/product/opentracing_on_3scale/" rel="alternate" type="text/html" title="OpenTracing on 3scale" /><published>2021-04-01T00:00:00+09:00</published><updated>2021-04-01T00:00:00+09:00</updated><id>/en/product/opentracing_on_3scale</id><content type="html" xml:base="/en/product/opentracing_on_3scale/"><![CDATA[<section class="doc-section level-1"><h2 id="introduction">Introduction</h2><p>This document will walk you through how to setup <a href="https://www.jaegertracing.io/">Jaeger</a>, enable OpenTracing on <a href="https://github.com/3scale/APIcast">APIcast</a> and <a href="https://github.com/3scale/echo-api">Echo-api</a>, then confirm the integration on <a href="https://www.openshift.com/">OpenShift 4.x</a>.</p></section>
<section class="doc-section level-1"><h2 id="prerequisites">Prerequisites</h2><section class="doc-section level-2"><h3 id="software-requirements">Software requirements</h3><div class="ulist"><ul><li><a href="https://www.openshift.com/products/container-platform">Red Hat OpenShift Container Platform</a> 4.6</li><li><a href="https://www.redhat.com/en/technologies/jboss-middleware/3scale">Red Hat 3scale API Management</a> 2.9</li></ul></div>
<aside class="admonition-block note notice" role="note"><h6 class="block-title label-only"><span class="title-label">Note: </span></h6><p>This procedure would work on some previous versions but isn&#8217;t confirmed</p></aside></section></section>
<section class="doc-section level-1"><h2 id="my-tested-environment">My tested environment</h2><div class="ulist"><ul><li><a href="https://getfedora.org/">Fedora 32</a></li><li><a href="https://developers.redhat.com/products/codeready-containers/overview">Red Hat CodeReady Containers(CRC)</a> 1.24.0</li><li><a href="https://www.openshift.com/products/container-platform">OpenShift</a> 4.7.0</li><li><a href="https://www.redhat.com/en/technologies/jboss-middleware/3scale">3scale</a> 2.9</li></ul></div>
<aside class="admonition-block note notice" role="note"><h6 class="block-title label-only"><span class="title-label">Note: </span></h6><p>CRC is available for Windows, macOS, and Linux, so you can try it in other environments as well.</p></aside>
<aside class="admonition-block note notice" role="note"><h6 class="block-title label-only"><span class="title-label">Note: </span></h6><p>3scale 2.9 isn&#8217;t supported on OpenShift 4.7. I&#8217;ll test this steps with 3scale 2.10 after released.</p></aside></section>
<section class="doc-section level-1"><h2 id="setup-procedure">Setup procedure</h2><section class="doc-section level-2"><h3 id="install-red-hat-openshift-jaeger-operator">Install Red Hat OpenShift Jaeger operator</h3><div class="olist arabic"><ol class="arabic"><li><p>Open OperatorHub.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_00_operatorhub.png" alt="OperatorHub"></p></li><li><p>Search <code>jaeger</code>, then click <code>Red Hat OpenShift Jaeger</code>.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_01_operatorhub.png" alt="OperatorHub"></p></li><li><p>Click <code>Install</code></p><p><img src="/assets/images/20210401_opentracing_on_3scale_02_1_jaeger_install.png" alt="Jaeger Operator Installation"></p></li><li><p>Click <code>Install</code> again.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_02_2_jaeger_install.png" alt="Jaeger Operator Installation"></p></li><li><p>Wait until the installation complete.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_02_3_jaeger_install.png" alt="Jaeger Operator Installation"></p></li></ol></div></section>
<section class="doc-section level-2"><h3 id="create-jaeger">Create Jaeger</h3><div class="olist arabic"><ol class="arabic"><li><p>Open Installed Operators page, make sure the project is your 3scale project. Then click <code>Jaeger</code> link.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_03_installed_operators.png" alt="Jaeger Operator Installation"></p></li><li><p>Click <code>Create Jaeger</code>.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_04_operator_details.png" alt="Jaeger Operator Installation"></p></li><li><p>Click <code>Create</code>.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_05_create_jaeger.png" alt="Jaeger Operator Installation"></p></li><li><p><code>jaeger-all-in-one-in-memory</code> will be created.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_06_created_jaeger.png" alt="Jaeger Operator Installation"></p></li><li><p>Search <code>jaeger-all-in-one-in-memory</code> route, then open the location.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_08_routes.png" alt="Jaeger Operator Installation"></p></li><li><p>Click <code>Login with OpenShift</code>.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_09_1_login_Jeager.png" alt="Jaeger Operator Installation"></p></li><li><p>Login to OpenShift as a user.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_09_2_login_Jeager.png" alt="Jaeger Operator Installation"></p></li><li><p>Click <code>Allow selected permissions</code>.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_09_3_login_Jeager.png" alt="Jaeger Operator Installation"></p></li><li><p>Now you will see Jaeger UI.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_10_jaeger_ui.png" alt="Jaeger Operator Installation"></p></li><li><p>You can see 4 Jaeger services in the project.</p><div class="listing-block"><pre>$ oc get svc|grep '\(jaeger\|NAME\)'
NAME                                            TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)                                  AGE
jaeger-all-in-one-inmemory-agent                ClusterIP   None           &lt;none&gt;        5775/UDP,5778/TCP,6831/UDP,6832/UDP      5d
jaeger-all-in-one-inmemory-collector            ClusterIP   10.217.5.218   &lt;none&gt;        9411/TCP,14250/TCP,14267/TCP,14268/TCP   5d
jaeger-all-in-one-inmemory-collector-headless   ClusterIP   None           &lt;none&gt;        9411/TCP,14250/TCP,14267/TCP,14268/TCP   5d
jaeger-all-in-one-inmemory-query                ClusterIP   10.217.4.66    &lt;none&gt;        443/TCP                                  5d</pre></div></li></ol></div></section>
<section class="doc-section level-2"><h3 id="configure-apicast">Configure APIcast</h3><p>Reference: <a href="https://access.redhat.com/documentation/en-us/red_hat_3scale_api_management/2.9/html/administering_the_api_gateway/operating-apicast#configuring_apicast_with_opentracing">Configuring APIcast with OpenTracing</a></p>
<div class="olist arabic"><ol class="arabic"><li><p>Configure <code>jaeger_config.json</code> locally.</p><div class="listing-block"><pre class="rouge highlight"><code data-lang="json"><span class="p">{</span><span class="w">
    </span><span class="nl">"service_name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"apicast"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"disabled"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
    </span><span class="nl">"sampler"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"const"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"param"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"reporter"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"queueSize"</span><span class="p">:</span><span class="w"> </span><span class="mi">100</span><span class="p">,</span><span class="w">
      </span><span class="nl">"bufferFlushInterval"</span><span class="p">:</span><span class="w"> </span><span class="mi">10</span><span class="p">,</span><span class="w">
      </span><span class="nl">"logSpans"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
      </span><span class="nl">"localAgentHostPort"</span><span class="p">:</span><span class="w"> </span><span class="s2">"jaeger-all-in-one-inmemory-agent:6831"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"headers"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"jaegerDebugHeader"</span><span class="p">:</span><span class="w"> </span><span class="s2">"debug-id"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"jaegerBaggageHeader"</span><span class="p">:</span><span class="w"> </span><span class="s2">"baggage"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"TraceContextHeaderName"</span><span class="p">:</span><span class="w"> </span><span class="s2">"uber-trace-id"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"traceBaggageHeaderPrefix"</span><span class="p">:</span><span class="w"> </span><span class="s2">"testctx-"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"baggage_restrictions"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"denyBaggageOnInitializationFailure"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
        </span><span class="nl">"hostPort"</span><span class="p">:</span><span class="w"> </span><span class="s2">"127.0.0.1:5778"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"refreshInterval"</span><span class="p">:</span><span class="w"> </span><span class="mi">60</span><span class="w">
    </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span></code></pre></div></li><li><p>Register jaeger_config.json as a ConfigMap</p><div class="listing-block"><pre class="rouge highlight"><code data-lang="shell"><span class="nv">$ </span>oc create configmap jaeger-config <span class="nt">--from-file</span><span class="o">=</span>jaeger_config.json</code></pre></div></li><li><p>Mount the file on apicast-production</p><div class="listing-block"><pre class="rouge highlight"><code data-lang="shell"><span class="nv">$ </span>oc <span class="nb">set </span>volume dc/apicast-production <span class="nt">--add</span> <span class="nt">--overwrite</span> <span class="nt">--name</span><span class="o">=</span>jaeger-config <span class="nt">--mount-path</span><span class="o">=</span>/opt/app-root/src/conf.d/opentracing/jaeger_config.json <span class="nt">--sub-path</span><span class="o">=</span>jaeger_config.json <span class="nt">--source</span><span class="o">=</span><span class="s1">'{"configMap":{"name":"jaeger-config","items":[{"key":"jaeger_config.json","path":"jaeger_config.json"}]}}'</span></code></pre></div></li><li><p>Add <code>OPENTRACING_TRACER</code> and <code>OPENTRACING_CONFIG</code> environment variables in apicast-production deploymentconfig.</p><div class="listing-block"><pre class="rouge highlight"><code data-lang="shell"><span class="nv">$ </span>oc <span class="nb">set env </span>dc/apicast <span class="nv">OPENTRACING_TRACER</span><span class="o">=</span>jaeger <span class="nv">OPENTRACING_CONFIG</span><span class="o">=</span>/opt/app-root/src/conf.d/opentracing/jaeger_config.json</code></pre></div></li><li>After deployed apicast-production, call a production base url of a product</li><li><p>Open Jaeger UI, select <code>apicast</code> service then click <code>Find Traces</code>.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_11_find_apicast_traces.png" alt="Find APIcast tracing"></p></li><li><p>Traces are listed.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_12_apicast_traces.png" alt="APIcast tracing"></p></li></ol></div></section>
<section class="doc-section level-2"><h3 id="setup-echo-api">Setup echo-api</h3><div class="olist arabic"><ol class="arabic"><li><p>Install echo-api</p><div class="listing-block"><pre class="rouge highlight"><code data-lang="shell"><span class="nv">$ </span>oc new-app <span class="nt">-f</span> https://raw.githubusercontent.com/3scale/echo-api/master/contrib/openshift/echo-api-template.yml <span class="nt">--param</span> <span class="nv">ECHOAPI_HOST</span><span class="o">=</span>echo-api.apps-crc.testing</code></pre></div></li><li><p>Configure echo-api</p><div class="listing-block"><pre class="rouge highlight"><code data-lang="shell"><span class="nv">$ </span>oc <span class="nb">set env </span>dc/echo-api <span class="nv">OPENTRACING_TRACER</span><span class="o">=</span>jaeger <span class="nv">JAEGER_AGENT_HOST</span><span class="o">=</span>jaeger-all-in-one-inmemory-agent <span class="nv">JAEGER_AGENT_PORT</span><span class="o">=</span><span class="s2">"6831"</span></code></pre></div></li><li><p>Open Jaeger UI, select <code>echo-api</code> service then click <code>Find Traces</code>. Traces are listed.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_13_echoapi_traces.png" alt="Echo-api tracing"></p></li></ol></div></section>
<section class="doc-section level-2"><h3 id="configure-a-product">Configure a product</h3><div class="olist arabic"><ol class="arabic"><li><p>Configure the echo-api route as a backend</p><p><img src="/assets/images/20210401_opentracing_on_3scale_14_echoapi_backend.png" alt="Configure echo-api backend"></p></li><li><p>Configure the the backend to a product</p><p><img src="/assets/images/20210401_opentracing_on_3scale_15_configure_product.png" alt="Configure product"></p></li><li>Promote the configuration to the staging and production environment</li></ol></div></section>
<section class="doc-section level-2"><h3 id="test-the-integration">Test the integration</h3><div class="olist arabic"><ol class="arabic"><li>Send a request to the production public base url</li><li><p>Confirm whether the response returned from the echo-api</p><p>example:</p>
<div class="listing-block"><pre class="rouge highlight"><code data-lang="shell"><span class="nv">$ </span>curl <span class="s2">"https://api-3scale-apicast-production.apps-crc.testing:443/?user_key=b382b63a376dc1d41de338509066e2d3"</span> <span class="nt">-k</span></code></pre></div>
<div class="listing-block"><pre class="rouge highlight"><code data-lang="json"><span class="p">{</span><span class="w">
  </span><span class="nl">"method"</span><span class="p">:</span><span class="w"> </span><span class="s2">"GET"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"path"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="s2">"user_key=b382b63a376dc1d41de338509066e2d3"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"body"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
  </span><span class="nl">"headers"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"HTTP_VERSION"</span><span class="p">:</span><span class="w"> </span><span class="s2">"HTTP/1.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"HTTP_X_REAL_IP"</span><span class="p">:</span><span class="w"> </span><span class="s2">"10.217.0.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"HTTP_X_3SCALE_PROXY_SECRET_TOKEN"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Shared_secret_sent_from_proxy_to_API_backend_5817cd301754f6b2"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"HTTP_USER_AGENT"</span><span class="p">:</span><span class="w"> </span><span class="s2">"curl/7.69.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"HTTP_ACCEPT"</span><span class="p">:</span><span class="w"> </span><span class="s2">"*/*"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"HTTP_X_FORWARDED_HOST"</span><span class="p">:</span><span class="w"> </span><span class="s2">"api-3scale-apicast-production.apps-crc.testing, echo-api.apps-crc.testing"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"HTTP_X_FORWARDED_PORT"</span><span class="p">:</span><span class="w"> </span><span class="s2">"443, 80"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"HTTP_X_FORWARDED_PROTO"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https, http"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"HTTP_FORWARDED"</span><span class="p">:</span><span class="w"> </span><span class="s2">"for=192.168.130.1;host=api-3scale-apicast-production.apps-crc.testing;proto=https, for=10.217.0.117;host=echo-api.apps-crc.testing;proto=http"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"HTTP_X_FORWARDED_FOR"</span><span class="p">:</span><span class="w"> </span><span class="s2">"192.168.130.1, 10.217.0.117"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"HTTP_UBER_TRACE_ID"</span><span class="p">:</span><span class="w"> </span><span class="s2">"ebd6331bd080b480:b7cca0910ca55d3d:ebd6331bd080b480:1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"HTTP_HOST"</span><span class="p">:</span><span class="w"> </span><span class="s2">"echo-api.apps-crc.testing"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"uuid"</span><span class="p">:</span><span class="w"> </span><span class="s2">"4029588a-77de-44b8-a80a-388e5506aa50"</span><span class="w">
</span><span class="p">}</span></code></pre></div></li><li><p>Open Jaeger UI, select <code>apicast</code> service then click <code>Find Traces</code>. Traces are listed.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_16_apicast_traces.png" alt="APIcast traces"></p></li><li><p>Click a trace that contais <code>apicast</code> and <code>echo-api</code>. APIcast and Echo-api is included in one trace.</p><p><img src="/assets/images/20210401_opentracing_on_3scale_17_trace_detail.png" alt="Trace detail"></p></li></ol></div></section></section>]]></content><author><name>Takayuki Konishi</name></author><category term="en" /><category term="3scale" /><category term="openshift" /><category term="jaeger" /><category term="opentracing" /><summary type="html"><![CDATA[IntroductionThis document will walk you through how to setup Jaeger, enable OpenTracing on APIcast and Echo-api, then confirm the integration on OpenShift 4.x.]]></summary></entry><entry xml:lang="ja"><title type="html">All-in-one OpenStack 16.1 インストール</title><link href="/ja/trial/openstack/" rel="alternate" type="text/html" title="All-in-one OpenStack 16.1 インストール" /><published>2020-09-26T00:00:00+09:00</published><updated>2020-09-26T00:00:00+09:00</updated><id>/ja/trial/openstack</id><content type="html" xml:base="/ja/trial/openstack/"><![CDATA[<section id="preamble" aria-label="Preamble"><aside class="admonition-block note notice--warning" role="note"><h6 class="block-title label-only"><span class="title-label">Note: </span></h6><p>このドキュメントは実験的な内容です。OpenStackは初めて触るので、適切な方法でない可能性があります。後述する未解決の問題があります。特定の環境で実施しただけで、他の環境に適用できる保証はありません。最後に、All-in-one OpenStackは16.1ではテクニカルプレビューなのでフルサポートされているインストール方法ではありません。</p></aside></section>
<section class="doc-section level-1"><h2 id="背景">背景</h2><p>OpenShift環境を構築するにあたって、OpenShiftインストーラーが対応している環境が必要です。AWSなどいくつか対応していますが、ここではOpenStackを試してみました。</p></section>
<section class="doc-section level-1"><h2 id="参考資料">参考資料</h2><div class="ulist"><ul><li><a href="https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.1/">Product Documentation for Red Hat OpenStack Platform 16.1</a></li></ul></div></section>
<section class="doc-section level-1"><h2 id="all-in-one-osp">All-in-one OSP</h2><p>本来OSPは複数のサーバーにコンポーネントを分散してデプロイするものですが、検証用に <a href="https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.1/html/quick_start_guide/index">サーバー1台にインストールする手順</a> が公開されているので、これに従ってインストールします。</p></section>
<section class="doc-section level-1"><h2 id="未解決の問題">未解決の問題</h2><p>このドキュメントの手順では、以下の問題が残っています。</p>
<div class="ulist"><ul><li>SELinux<ul><li>この手順では SELinux のルールが不十分なので追加の設定が必要です。</li></ul></li><li>OS再起動時の安定性<ul><li>OSを再起動すると、タイミングの問題なのか各コンポーネントにアクセスできない場合があります。</li></ul></li><li>ネットワークの安定性<ul><li>OVSがエラーを出力する場合があります。</li></ul></li><li>Swiftストレージの容量確認<ul><li>Swiftストレージに1TBを割り当てたつもりですが、実際に設定できたか確認できていません。</li></ul></li></ul></div></section>
<section class="doc-section level-1"><h2 id="システム要件-quick-start-guide-1-1">システム要件 (<a href="https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.1/html/quick_start_guide/all-in-one-openstack-installation#prerequisites">Quick Start Guide 1.1</a>)</h2><p>ネットワークインターフェースが2つ必要です。例えば以下のように設定します。</p>
<div class="ulist"><ul><li>インターフェース eth0<ul><li>default network 192.168.122.0/24</li><li>gateway 192.168.122.1</li></ul></li><li>インターフェース eth1<ul><li>management network 192.168.25.0/24</li><li>gateway 192.168.25.1</li></ul></li></ul></div></section>
<section class="doc-section level-1"><h2 id="サンプル設定">サンプル設定</h2><p>このページでは、以下のように設定します。</p>
<div class="dlist"><dl><dt>ホスト名</dt><dd>osp.example.com</dd><dt>eth0 IPアドレス</dt><dd>192.168.122.2</dd><dt>eth1 IPアドレス</dt><dd>192.168.25.2</dd><dt>DNS server</dt><dd>192.168.25.1</dd></dl></div></section>
<section class="doc-section level-1"><h2 id="対象のハードウェア">対象のハードウェア</h2><div class="dlist"><dl><dt>CPU</dt><dd>Intel Xeon E5-2670 10 Core 20 Thread x 2。</dd><dt>Memory</dt><dd>512GB</dd><dt>SSD</dt><dd>256GB x 2台。まとめてシステム領域に使用。</dd><dt>SSD</dt><dd>1TB x 2台。それぞれ、Cinder用、Swift用。</dd></dl></div></section>
<section class="doc-section level-1"><h2 id="事前準備">事前準備</h2><div class="dlist"><dl><dt>ルーターの設定</dt><dd><code>eth0</code>、 <code>eth1</code> に固定IPを設定します。</dd><dt>DNS設定</dt><dd><code>osp.example.com</code> に <code>eth1</code> の固定IPを設定します。</dd><dt>RHEL 8.2インストール</dt><dd><a href="https://access.redhat.com/documentation/ja-jp/red_hat_enterprise_linux/8/">製品ドキュメント</a>に従ってインストール。</dd><dt>ホスト名設定</dt><dd><code># hostnamectl set-hostname osp.example.com</code></dd></dl></div></section>
<section class="doc-section level-1"><h2 id="ドキュメントと異なる設定">ドキュメントと異なる設定</h2><div class="dlist"><dl><dt>Cinder volume</dt><dd>ドキュメントの手順では、10GBのループバックデバイスを作成してCinder volumeに割り当てていますが、ここではSSDを1台割り当てます。</dd><dt>Swift volume</dt><dd>ドキュメントの手順では、システムストレージを利用します。ここではそれに加えてSSDを1台割り当てます。</dd></dl></div></section>
<section class="doc-section level-1"><h2 id="インストール手順">インストール手順</h2><p>ドキュメントに記載されている部分は説明を省きます。</p>
<div class="olist arabic"><ol class="arabic"><li><a href="https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.1/html/quick_start_guide/installing-the-all-in-one-openstack-environment">Chapter 3</a> の手順に従ってユーザー作成、システムの登録、OpenStackのインストーラー（TripleO）のインストールを行います。</li><li><a href="https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.1/html/quick_start_guide/configuring-the-all-in-one-openstack-installation">Chapter 4</a> の手順に従って <code>containers-prepare-parameters.yaml</code> と <code>standalone_parameters.yaml</code> を作成します。 <code>containers-prepare-parameters.yaml</code> は記載の手順で問題ありません。 <code>standalone_parameters.yaml</code> に関しても記載の手順でほとんど問題ありませんが、一点補足します。<ul><li><code>CloudDomain</code> に <code>example.com</code> を指定すると、OSPは <code>osp.example.com</code> を参照し、ホスト名と一致します。</li></ul></li><li>Cinder volumeの設定を変更します。<ul><li>編集中</li></ul></li><li><p>Swift volumeを設定します。</p><p>この環境では、はSwift用のSSDは <code>/dev/sdd</code> です。 <code>fdisk</code> で <code>sdd1</code> パーティションを作成後します。その後にXFSでフォーマットします。</p>
<div class="listing-block"><pre>mkfs.xfs /dev/sdd1
mkdir -p /srv/node/sdd1</pre></div>
<p><code>/etc/fstab</code> に <code>/dev/sdd1 /srv/node/sdd1 xfs defaults    0 2</code> を追加します。</p></li><li><a href="https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.1/html/quick_start_guide/deploying-the-all-in-one-openstack-installation">Chapter 5</a> の手順に従って、OpenStackをインストールします。</li></ol></div></section>
<section class="doc-section level-1"><h2 id="over-cloudを設定">over cloudを設定</h2><p><a href="https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.1/html/quick_start_guide/examples#example-3-compute-with-tenant-and-provider-networks">9.3. Example 3</a> の手順に従ってOvercloudを設定します。この環境では、以下のように環境変数を設定します。</p>
<div class="listing-block"><pre>export OS_CLOUD=standalone
export GATEWAY=192.168.25.1
export STANDALONE_HOST=192.168.25.2
export PUBLIC_NETWORK_CIDR=192.168.25.0/24
export PRIVATE_NETWORK_CIDR=192.168.100.0/24
export PUBLIC_NET_START=192.168.25.10
export PUBLIC_NET_END=192.168.24.254
export DNS_SERVER=192.168.25.1</pre></div>
<p>手順を実施すると、 <code>ssh cirros@&lt;FLOATING_IP&gt;</code> にアクセスできます。</p></section>
<section class="doc-section level-1"><h2 id="swiftなどのコマンド実行に必要な環境変数">swiftなどのコマンド実行に必要な環境変数</h2><p>この環境でSwiftコマンドなどを実行すると、以下のエラーが発生します。</p>
<div class="listing-block"><pre>$ swift list
Auth version 1.0 requires ST_AUTH, ST_USER, and ST_KEY environment variables
to be set or overridden with -A, -U, or -K.

Auth version 2.0 requires OS_AUTH_URL, OS_USERNAME, OS_PASSWORD, and
OS_TENANT_NAME OS_TENANT_ID to be set or overridden with --os-auth-url,
--os-username, --os-password, --os-tenant-name or os-tenant-id. Note:
adding "-V 2" is necessary for this.</pre></div>
<p><code>os-auth-url</code> などを環境変数かオプションで設定する必要がありますが、この値は、インストール時に作成されている <code>standalone-ansible-xxxxxxxx/Standalone/scale_tasks.yaml</code> にありました。</p>
<div class="listing-block"><pre>    OS_AUTH_TYPE: password
    OS_AUTH_URL: http://192.168.25.2:5000/v3
    OS_IDENTITY_API_VERSION: 3
    OS_PASSWORD: PASSWORDEXAMPLE
    OS_PROJECT_DOMAIN_NAME: Default
    OS_PROJECT_NAME: admin
    OS_USERNAME: admin
    OS_USER_DOMAIN_NAME: Default</pre></div></section>]]></content><author><name>Takayuki Konishi</name></author><category term="ja" /><category term="openstack" /><summary type="html"><![CDATA[Note: このドキュメントは実験的な内容です。OpenStackは初めて触るので、適切な方法でない可能性があります。後述する未解決の問題があります。特定の環境で実施しただけで、他の環境に適用できる保証はありません。最後に、All-in-one OpenStackは16.1ではテクニカルプレビューなのでフルサポートされているインストール方法ではありません。]]></summary></entry><entry xml:lang="en"><title type="html">Deploying 3scale to OpenShift Local</title><link href="/en/product/deploy_3scale_on_crc/" rel="alternate" type="text/html" title="Deploying 3scale to OpenShift Local" /><published>2020-07-05T00:00:00+09:00</published><updated>2023-07-18T15:38:24+09:00</updated><id>/en/product/deploy_3scale_on_crc</id><content type="html" xml:base="/en/product/deploy_3scale_on_crc/"><![CDATA[<section class="doc-section level-1"><h2 id="introduction">Introduction</h2><p>This document will walk you through the process of installing <a href="https://www.redhat.com/ja/technologies/jboss-middleware/3scale">Red Hat 3scale API Management</a>, an API management product, on <a href="https://developers.redhat.com/products/openshift-local/overview">OpenShift Local</a>, an OpenShift environment running on desktops and laptops.</p></section>
<section class="doc-section level-1"><h2 id="prerequisites">Prerequisites</h2><section class="doc-section level-2"><h3 id="system-requirements">System requirements</h3><p>OpenShift Local requires the following system resources:</p>
<div class="ulist"><ul><li>4 virtual CPUs (vCPUs)</li><li>9 GB of memory<ul><li>The procedure on this page recommends that you allocate at least 10GB of memory to the OpenShift Local virtual machine, preferably 16GB.</li></ul></li><li>35 GB of storage space</li></ul></div>
<aside class="admonition-block note notice" role="note"><h6 class="block-title label-only"><span class="title-label">Note: </span></h6><p>For more requirements, refer to <a href="https://access.redhat.com/documentation/en-us/red_hat_openshift_local/2.23/html/getting_started_guide/installing#minimum_system_requirements">OpenShift Local - Minimum system requirements</a>.</p></aside></section>
<section class="doc-section level-2"><h3 id="accounts">Accounts</h3><p>A Red Hat Developer account is required. For details on how to register, please refer to <a href="https://developers.redhat.com/">Red Hat Developer</a> page.</p></section></section>
<section class="doc-section level-1"><h2 id="my-tested-environment">My tested environment</h2><div class="ulist"><ul><li><a href="https://getfedora.org/">Fedora 38</a></li><li>OpenShift Local 2.23.0</li><li>OpenShift 4.13.3</li><li>3scale 2.13</li></ul></div>
<p>OpenShift Local is available for Windows, macOS, and Linux, so you can try it in other environments as well.</p></section>
<section class="doc-section level-1"><h2 id="installation-procedure">Installation procedure</h2><div class="olist arabic"><ol class="arabic"><li>Download OpenShift Local and Pull Secret from <a href="https://console.redhat.com/openshift/create/local">this download page</a>.</li><li>Extract the OpenShift Local archive file, move to the extracted directory, then run this command.</li><li><p><code>$ ./crc setup</code></p><aside class="admonition-block note notice" role="note"><h6 class="block-title label-only"><span class="title-label">Note: </span></h6><p>If you have more memory available on your PC, I recommend increasing the memory allocation. By running <code>./crc config set memory 16384</code>, OpenShift Local will use 16GB memory.</p></aside>
<aside class="admonition-block note notice" role="note"><h6 class="block-title label-only"><span class="title-label">Note: </span></h6><p>The command name comes from CodeReady Containers, the former product name of OpenShift Local.</p></aside></li><li><p><code>$ ./crc start -p /path/to/pull-secret</code><br>
It will take quite a while, so please be patient. When the following message is output, the OpenShift Local has been started.</p><div class="listing-block"><pre class="rouge highlight"><code>Started the OpenShift cluster.

The server is accessible via web console at:
  https://console-openshift-console.apps-crc.testing

Log in as administrator:
  Username: kubeadmin
  Password: &lt;password&gt;

Log in as user:
  Username: developer
  Password: developer

Use the 'oc' command line interface:
  $ eval $(crc oc-env)
  $ oc login -u developer https://api.crc.testing:6443</code></pre></div>
<p>The login user, password, connection destination, etc. are printed in the startup message, so please note them.<br>
After the OpenShift Local indicates that the startup is complete, you can access the OpenShift web console. However, in some cases, the startup process is still going on.</p></li><li><p>Enable <code>oc</code> command.</p><div class="listing-block"><pre class="rouge highlight"><code data-lang="bash"><span class="nv">$ </span><span class="nb">eval</span> <span class="si">$(</span>./crc oc-env<span class="si">)</span></code></pre></div></li><li><p>Login to the OpenShift with this command.</p><div class="listing-block"><pre class="rouge highlight"><code data-lang="bash"><span class="nv">$ </span>oc login <span class="nt">-u</span> kubeadmin <span class="nt">-p</span> &lt;password&gt; https://api.crc.testing:6443</code></pre></div>
<p>Replace <code>&lt;password&gt;</code> with the generated password.</p></li><li><p>Create a project (e.g. 3scale)</p><div class="listing-block"><pre class="rouge highlight"><code data-lang="bash"><span class="nv">$ </span>oc new-project 3scale</code></pre></div></li><li><p>Run <code>$ crc console</code> to open the OpenShift web console.</p><p><img src="/assets/images/operatorhub_marked.png" alt="OperatorHub"></p></li><li>Select Administrator view.</li><li>Open OperatorHub.</li><li>Search "3scale".</li><li>Click <code>Red Hat Integration - 3scale</code></li><li>Click <code>Install</code> button.</li><li><p>Select a project to install the operator, a 3scale version, enable/disable auto update. Click <code>Install</code> button.</p><p><img src="/assets/images/select_install_options.png" alt="Select Install Options"></p></li><li>Click the operator, click <code>APIManager</code> tab, then click <code>Create APIManager</code>.</li><li><p>Select <code>YAML view</code>, edit APIManager definition as following, then click <code>Create</code>.</p><div class="listing-block"><pre class="rouge highlight"><code data-lang="yaml"><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">apps.3scale.net/v1alpha1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">APIManager</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">apimanager-sample</span>
  <span class="na">namespace</span><span class="pi">:</span> <span class="s">3scale</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">wildcardDomain</span><span class="pi">:</span> <span class="s">apps-crc.testing</span>
  <span class="na">resourceRequirementsEnabled</span><span class="pi">:</span> <span class="kc">false</span></code></pre></div></li><li><p>Flip to Developer view, open Topology page.</p><p><img src="/assets/images/flip_to_developer_view.png" alt="Flip to Developer view"></p></li><li>Once all the pods have been rolled out, access the 3scale admin portal.<ul><li>3scale admin portal: <a class="bare" href="https://3scale-admin.apps-crc.testing/">https://3scale-admin.apps-crc.testing/</a></li><li>Check <code>ADMIN_USER</code> and <code>ADMIN_PASSWORD</code> in the <code>system-seed</code> secret for your ID and password.<ul><li><a class="bare" href="https://console-openshift-console.apps-crc.testing/k8s/ns/3scale/secrets/system-seed">https://console-openshift-console.apps-crc.testing/k8s/ns/3scale/secrets/system-seed</a></li></ul></li><li>Other Routes<ul><li><a class="bare" href="https://console-openshift-console.apps-crc.testing/search/ns/3scale?kind=Route">https://console-openshift-console.apps-crc.testing/search/ns/3scale?kind=Route</a></li></ul></li></ul></li></ol></div></section>
<section class="doc-section level-1"><h2 id="troubleshooting">Troubleshooting</h2><section class="doc-section level-2"><h3 id="operatorhub-page-shows-no-operatorhub-items-found">OperatorHub page shows "No OperatorHub Items Found"</h3><p>Wait for a while. The feature might not be ready yet.</p>
<p>This document may help.<br>
<a href="https://github.com/operator-framework/operator-marketplace/blob/master/docs/troubleshooting.md#no-packages-show-up-in-the-ui-no-operatorhub-items-found">No packages show up in the UI (No OperatorHub Items Found)</a></p></section>
<section class="doc-section level-2"><h3 id="3scale-operator-is-running-but-no-pods-are-rolled-out">3scale Operator is running, but no pods are rolled out.</h3><div class="ulist"><ul><li>Confirm whether <code>threescale-registry-auth</code> secret is created with the correct values.</li></ul></div></section>
<section class="doc-section level-2"><h3 id="cannot-start-openshift-local">Cannot start OpenShift Local</h3><p>Try these operations:</p>
<div class="ulist"><ul><li><code>$ ./crc stop</code></li><li><code>$ ./crc delete</code></li><li>Remove the crc VM</li></ul></div>
<p>After that, back to <code>crc setup</code>.</p></section>
<section class="doc-section level-2"><h3 id="how-to-setup-previous-ocp-versions">How to setup previous OCP versions</h3><p>If you need to run previous OCP versions, you can download the corresponding OpenShift Local from here:<br>
<a class="bare" href="https://mirror.openshift.com/pub/openshift-v4/clients/crc/">https://mirror.openshift.com/pub/openshift-v4/clients/crc/</a></p></section></section>]]></content><author><name>Takayuki Konishi</name></author><category term="en" /><category term="crc" /><category term="3scale" /><category term="openshift" /><category term="openshift_local" /><summary type="html"><![CDATA[IntroductionThis document will walk you through the process of installing Red Hat 3scale API Management, an API management product, on OpenShift Local, an OpenShift environment running on desktops and laptops.]]></summary></entry><entry xml:lang="ja"><title type="html">3scaleをCRCにデプロイ</title><link href="/ja/product/deploy_3scale_on_crc/" rel="alternate" type="text/html" title="3scaleをCRCにデプロイ" /><published>2020-07-05T00:00:00+09:00</published><updated>2020-07-11T12:12:00+09:00</updated><id>/ja/product/deploy_3scale_on_crc</id><content type="html" xml:base="/ja/product/deploy_3scale_on_crc/"><![CDATA[<section class="doc-section level-1"><h2 id="はじめに">はじめに</h2><p>API管理製品である <a href="https://www.redhat.com/ja/technologies/jboss-middleware/3scale">Red Hat 3scale API Management</a>をデスクトップやノートPCで動くOpenShift環境である <a href="https://developers.redhat.com/products/codeready-containers/overview">CodeReady Containers</a> にインストールする手順を紹介します。</p></section>
<section class="doc-section level-1"><h2 id="前提条件">前提条件</h2><section class="doc-section level-2"><h3 id="システム要件">システム要件</h3><p>CRCをインストールするには、以下のシステムリソースが必要です。</p>
<div class="ulist"><ul><li>仮想CPU 4</li><li>メモリー 8GB<ul><li>このページの手順では、CRC仮想マシンにメモリーを最低10GB、できれば16GB割り当てることをおすすめします。</li></ul></li><li>ストレージ空き容量 35GB</li></ul></div>
<aside class="admonition-block note notice" role="note"><h6 class="block-title label-only"><span class="title-label">Note: </span></h6><p>詳細については、<a href="https://access.redhat.com/documentation/en-us/red_hat_codeready_containers/1.9/html/getting_started_guide/installation_gsg#minimum-system-requirements_gsg">CRCのドキュメント</a>を参照してください。</p></aside></section>
<section class="doc-section level-2"><h3 id="アカウント">アカウント</h3><p>Red Hat Developer Programへの登録が必要です。登録方法については <a href="https://rheb.hatenablog.com/entry/developer-program">赤帽エンジニアブログの記事</a> を参照してください。</p>
<p>登録後に <a href="https://access.redhat.com/terms-based-registry/">Token Generator</a>でサービスアカウントを作成し、ユーザー名とトークンをメモしてください。
ユーザー名は "12345678|username" のような書式で、トークンは"eyJhbGciOiJSUzUxMiJ&#8230;&#8203;"のような長い文字列です。</p></section></section>
<section class="doc-section level-1"><h2 id="確認した環境">確認した環境</h2><div class="ulist"><ul><li><a href="https://getfedora.org/">Fedora 31</a></li><li>CRC 1.9.0</li><li>OpenShift 4.3.10</li><li>3scale 2.8</li></ul></div>
<p>CRCはWindows版、macOS版、Linux版があるので、他の環境でも試してみてください。</p></section>
<section class="doc-section level-1"><h2 id="インストール手順">インストール手順</h2><div class="olist arabic"><ol class="arabic"><li><a href="https://cloud.redhat.com/openshift/install/crc/installer-provisioned">ダウンロードページ</a>からCRCとPull Secretをダウンロードします。</li><li>ダウンロードしたCRCを展開して、コンソールで展開したディレクトリに移動します。</li><li><p><code>$ ./crc setup</code></p><aside class="admonition-block note notice" role="note"><h6 class="block-title label-only"><span class="title-label">Note: </span></h6><p>もしメモリーに余裕があれば、割当メモリーを増やすことをおすすめします。 <code>./crc config set memory 16384</code> を実行すると、CRCは16GBのメモリーを使用します。</p></aside></li><li><p><code>$ ./crc start -p /path/to/pull-secret</code><br>
かなり時間がかかるのでしばらくお待ちください。以下のようなメッセージが出力されたらCRCの起動完了です。</p><div class="listing-block"><pre class="rouge highlight"><code>INFO To access the cluster, first set up your environment by following 'crc oc-env' instructions
INFO Then you can access it by running 'oc login -u developer -p developer https://api.crc.testing:6443'
INFO To login as an admin, run 'oc login -u kubeadmin -p HeJWN-ckbCA-Q96Ds-Sj763 https://api.crc.testing:6443'
INFO
INFO You can now run 'crc console' and use these credentials to access the OpenShift web console
Started the OpenShift cluster
WARN The cluster might report a degraded or error state. This is expected since several operators have been disabled to lower the resource usage. For more information, please consult the documentation</code></pre></div>
<p>起動時のメッセージに、ログインユーザー、パスワード、接続先などが出力されているのでメモしてください。また、CRCで起動完了の表示が出た後で、OpenShiftのWebコンソールにアクセスしても、まだ起動処理が継続している場合もあります。</p></li><li><p><code>oc</code> コマンドを有効にします。</p><div class="listing-block"><pre class="rouge highlight"><code data-lang="bash"><span class="nv">$ </span><span class="nb">eval</span> <span class="si">$(</span>./crc oc-env<span class="si">)</span></code></pre></div></li><li><p>OpenShiftにログインします。</p><div class="listing-block"><pre class="rouge highlight"><code data-lang="bash"><span class="nv">$ </span>oc login <span class="nt">-u</span> kubeadmin <span class="nt">-p</span> &lt;password&gt; https://api.crc.testing:6443</code></pre></div>
<p><code>&lt;password&gt;</code> は、出力されたパスワードで置き換えてください。</p></li><li><p>プロジェクトを作成してください。例えば、「3scale28」プロジェクトを作成する場合は以下の通りです。</p><div class="listing-block"><pre class="rouge highlight"><code data-lang="bash"><span class="nv">$ </span>oc new-project 3scale28</code></pre></div></li><li><p>作成したサービスアカウントを元に、 <code>threescale-registry-auth</code> シークレットを作成します。</p><div class="listing-block"><pre class="rouge highlight"><code data-lang="bash"><span class="nv">$ </span>oc create secret docker-registry threescale-registry-auth <span class="se">\</span>
 <span class="nt">--docker-server</span><span class="o">=</span>registry.redhat.io <span class="se">\</span>
 <span class="nt">--docker-username</span><span class="o">=</span><span class="s2">"サービスアカウントのusername"</span> <span class="se">\</span>
 <span class="nt">--docker-password</span><span class="o">=</span><span class="s2">"サービスアカウントのtoken"</span></code></pre></div></li><li><p><code>$ crc console</code> を実行して、OpenShiftのウェブコンソールを開きます。</p><p><img src="/assets/images/operatorhub_marked.png" alt="OperatorHub"></p></li><li>Administrator ビューを選択します。</li><li>OperatorHubを開きます。</li><li>3scale を検索します。</li><li><code>Red Hat Integration - 3scale</code> をクリックします。</li><li><code>Install</code> ボタンをクリックします。</li><li><p>オペレーターをインストールするプロジェクト、インストール対象の3scaleのバージョン、自動アップデートの有無を選択します。最後に <code>Subscribe</code> ボタンをクリックします。</p><p><img src="/assets/images/select_install_options.png" alt="Select Install Options"></p></li><li>オペレーターをクリックし、API Managerの <code>Create Instance</code> をクリックします。</li><li><p>API Manager定義を以下のように編集し、 <code>Create</code> をクリックします。</p><div class="listing-block"><pre class="rouge highlight"><code data-lang="yaml"><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">apps.3scale.net/v1alpha1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">APIManager</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">example-apimanager</span>
  <span class="na">namespace</span><span class="pi">:</span> <span class="s">3scale28</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">wildcardDomain</span><span class="pi">:</span> <span class="s">apps-crc.testing</span>
  <span class="na">resourceRequirementsEnabled</span><span class="pi">:</span> <span class="kc">false</span></code></pre></div></li><li><p>Developer ビューに切り替えます。</p><p><img src="/assets/images/flip_to_developer_view.png" alt="Flip to Developer view"></p></li><li>全てのPodのロールアウトが完了したら、3scale管理ポータルにアクセスします。<ul><li>3scale管理ポータル: <a class="bare" href="https://3scale-admin.apps-crc.testing/">https://3scale-admin.apps-crc.testing/</a></li><li>IDとパスワードは <code>system-seed</code> シークレットの <code>ADMIN_USER</code> と <code>ADMIN_PASSWORD</code> を確認してください。<ul><li><a class="bare" href="https://console-openshift-console.apps-crc.testing/k8s/ns/3scale28/secrets/system-seed">https://console-openshift-console.apps-crc.testing/k8s/ns/3scale28/secrets/system-seed</a></li></ul></li><li>その他のRoutes<ul><li><a class="bare" href="https://console-openshift-console.apps-crc.testing/search/ns/3scale28?kind=Route">https://console-openshift-console.apps-crc.testing/search/ns/3scale28?kind=Route</a></li></ul></li></ul></li></ol></div></section>
<section class="doc-section level-1"><h2 id="トラブルシューティング">トラブルシューティング</h2><section class="doc-section level-2"><h3 id="operatorhubページでno-operatorhub-items-foundと表示される">OperatorHubページで、"No OperatorHub Items Found"と表示される</h3><p>しばらく待ってから、Try again をクリックしてください。</p>
<p>以下のドキュメントが参考になるかもしれません。<br>
<a href="https://github.com/operator-framework/operator-marketplace/blob/master/docs/troubleshooting.md#no-packages-show-up-in-the-ui-no-operatorhub-items-found">No packages show up in the UI (No OperatorHub Items Found)</a></p></section>
<section class="doc-section level-2"><h3 id="3scale-operator-podはロールアウトされたが他のpodがロールアウトされない">3scale Operator Podはロールアウトされたが、他のPodがロールアウトされない</h3><div class="ulist"><ul><li><code>threescale-registry-auth</code> シークレットが設定されているか確認してください。</li></ul></div></section>
<section class="doc-section level-2"><h3 id="crcが起動しない">CRCが起動しない</h3><p>以下のような操作を試してみてください。</p>
<div class="ulist"><ul><li><code>$ ./crc stop</code></li><li><code>$ ./crc delete</code></li><li>CRC仮想マシンを削除</li></ul></div>
<p>その後、 <code>crc setup</code> のステップに戻ります。</p></section>
<section class="doc-section level-2"><h3 id="特定のバージョンのopenshiftを利用する">特定のバージョンのOpenShiftを利用する</h3><p>前のバージョンのOpenShiftを利用する場合は、以下のページから該当するCRCをダウンロードできます。<br>
<a class="bare" href="https://mirror.openshift.com/pub/openshift-v4/clients/crc/">https://mirror.openshift.com/pub/openshift-v4/clients/crc/</a></p>
<figure class="table-block"><figcaption>Table 1. Table CRCとOpenShiftバージョンの対応</figcaption>
<table class="frame-all grid-all stretch"><colgroup><col style="width: 50%;"><col style="width: 50%;"></colgroup><thead><tr><th class="halign-left valign-top">CRCバージョン</th><th class="halign-left valign-top">OCPバージョン</th></tr></thead><tbody><tr><td class="halign-left valign-top">1.0.0</td><td class="halign-left valign-top">4.2.0</td></tr><tr><td class="halign-left valign-top">1.1.0</td><td class="halign-left valign-top">4.2.2</td></tr><tr><td class="halign-left valign-top">1.2.0</td><td class="halign-left valign-top">4.2.8</td></tr><tr><td class="halign-left valign-top">1.3.0</td><td class="halign-left valign-top">4.2.10</td></tr><tr><td class="halign-left valign-top">1.5.0</td><td class="halign-left valign-top">4.2.14</td></tr><tr><td class="halign-left valign-top">1.6.0</td><td class="halign-left valign-top">4.3.0</td></tr><tr><td class="halign-left valign-top">1.7.0</td><td class="halign-left valign-top">4.3.1</td></tr><tr><td class="halign-left valign-top">1.8.0</td><td class="halign-left valign-top">4.3.8</td></tr><tr><td class="halign-left valign-top">1.9.0</td><td class="halign-left valign-top">4.3.10</td></tr><tr><td class="halign-left valign-top">1.10.0</td><td class="halign-left valign-top">4.4.3</td></tr></tbody></table></figure></section></section>]]></content><author><name>Takayuki Konishi</name></author><category term="ja" /><category term="crc" /><category term="3scale" /><category term="openshift" /><summary type="html"><![CDATA[はじめにAPI管理製品である Red Hat 3scale API ManagementをデスクトップやノートPCで動くOpenShift環境である CodeReady Containers にインストールする手順を紹介します。]]></summary></entry></feed>